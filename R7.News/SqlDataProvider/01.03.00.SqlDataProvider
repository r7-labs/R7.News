--
--  01.03.00.SqlDataProvider
--
--  Author:
--       Roman M. Yagodin <roman.yagodin@gmail.com>
--
--  Copyright (c) 2017 Roman M. Yagodin
--
--  This program is free software: you can redistribute it and/or modify
--  it under the terms of the GNU Affero General Public License as published by
--  the Free Software Foundation, either version 3 of the License, or
--  (at your option) any later version.
--
--  This program is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU Affero General Public License for more details.
--
--  You should have received a copy of the GNU Affero General Public License
--  along with this program.  If not, see <http://www.gnu.org/licenses/>.

-- NOTE: To manually execute this script you must 
-- replace {databaseOwner} and {objectQualifier} with real values. 
-- Defaults is "dbo." for database owner and "" for object qualifier 

IF NOT EXISTS (select * from sys.columns where object_id = object_id (N'{databaseOwner}[{objectQualifier}r7_News]') and name = N'DiscussProviderKey')
    ALTER TABLE {databaseOwner}[{objectQualifier}r7_News]
        ADD DiscussProviderKey nvarchar (64) NULL,
            DiscussEntryID nvarchar (255) NULL -- e.g. forum post id
GO

IF EXISTS (select * from {databaseOwner}[{objectQualifier}ModuleDefinitions] where DefinitionName like N'R7.News%')
BEGIN
    -- Remove definitions added by new install
    DELETE FROM {databaseOwner}[{objectQualifier}ModuleDefinitions]
        WHERE DefinitionName = N'R7_News_Stream'

    DELETE FROM {databaseOwner}[{objectQualifier}ModuleDefinitions]
        WHERE DefinitionName = N'R7_News_Agent'

    -- Rename old definitions
    UPDATE {databaseOwner}[{objectQualifier}ModuleDefinitions]
        SET DefinitionName = N'R7_News_Stream' WHERE DefinitionName = N'R7.News.Stream'

    UPDATE {databaseOwner}[{objectQualifier}ModuleDefinitions]
        SET DefinitionName = N'R7_News_Agent' WHERE DefinitionName = N'R7.News.Agent'
END
GO

-- Drop stored procedures

IF EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}r7_News_GetNewsEntries_Count]') and type in (N'P'))
    DROP PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntries_Count]
GO

IF EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}r7_News_GetNewsEntries_FirstPage]') and type in (N'P'))
    DROP PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntries_FirstPage]
GO

IF EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}r7_News_GetNewsEntriesByTerms_Count]') and type in (N'P'))
    DROP PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntriesByTerms_Count]
GO

IF EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}r7_News_GetNewsEntriesByTerms_FirstPage]') and type in (N'P'))
    DROP PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntriesByTerms_FirstPage]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntries_Count]
    @portalId int,
    @now datetime,
    @minThematicWeight int,
    @maxThematicWeight int,
    @minStructuralWeight int,
    @maxStructuralWeight int
AS
BEGIN
    SET NOCOUNT ON;

    SELECT COUNT (*) FROM {databaseOwner}[{objectQualifier}r7_News] AS NE
        INNER JOIN {databaseOwner}[{objectQualifier}ContentItems] AS CI
            ON NE.ContentItemID = CI.ContentItemID
        WHERE NE.PortalID = @portalId
            AND (@now IS NULL OR ((NE.StartDate IS NULL OR @now >= NE.StartDate) AND (NE.EndDate IS NULL OR @now < NE.EndDate)))
            AND ((NE.ThematicWeight >= @minThematicWeight AND NE.ThematicWeight <= @maxThematicWeight)
                OR (NE.StructuralWeight >= @minStructuralWeight AND NE.StructuralWeight <= @maxStructuralWeight))
END
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntries_FirstPage]
    @portalId int,
    @pageSize int,
    @now datetime,
    @minThematicWeight int,
    @maxThematicWeight int,
    @minStructuralWeight int,
    @maxStructuralWeight int
AS
BEGIN
    SET NOCOUNT ON;

    SELECT TOP (@pageSize) NE.* FROM {databaseOwner}[{objectQualifier}r7_News] AS NE
        INNER JOIN {databaseOwner}[{objectQualifier}ContentItems] AS CI
            ON NE.ContentItemID = CI.ContentItemID
        WHERE NE.PortalID = @portalId
            -- Get only published items
            AND (@now IS NULL OR ((NE.StartDate IS NULL OR @now >= NE.StartDate) AND (NE.EndDate IS NULL OR @now < NE.EndDate)))
            -- Filter by weighs
            AND ((NE.ThematicWeight >= @minThematicWeight AND NE.ThematicWeight <= @maxThematicWeight)
                OR (NE.StructuralWeight >= @minStructuralWeight AND NE.StructuralWeight <= @maxStructuralWeight))
        -- Order by PublishedOnDate DESC 
        ORDER BY CASE WHEN NE.StartDate IS NOT NULL THEN NE.StartDate ELSE CI.CreatedOnDate END DESC
END
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntriesByTerms_Count]
    @portalId int,
    @now datetime,
    @minThematicWeight int,
    @maxThematicWeight int,
    @minStructuralWeight int,
    @maxStructuralWeight int,
    @term1 int,
    @term2 int = NULL,
    @term3 int = NULL,
    @term4 int = NULL,
    @term5 int = NULL,
    @term6 int = NULL,
    @term7 int = NULL,
    @term8 int = NULL,
    @term9 int = NULL,
    @term10 int = NULL,
    @term11 int = NULL,
    @term12 int = NULL,
    @term13 int = NULL,
    @term14 int = NULL,
    @term15 int = NULL,
    @term16 int = NULL,
    @term17 int = NULL,
    @term18 int = NULL,
    @term19 int = NULL,
    @term20 int = NULL
AS
BEGIN
    SET NOCOUNT ON;

    SELECT COUNT (DISTINCT NE.EntryID) FROM {databaseOwner}[{objectQualifier}r7_News] AS NE
        INNER JOIN {databaseOwner}[{objectQualifier}ContentItems] AS CI
            ON NE.ContentItemID = CI.ContentItemID
        INNER JOIN {databaseOwner}[{objectQualifier}ContentItems_Tags] AS CIT 
            ON CI.ContentItemID = CIT.ContentItemID 
        WHERE NE.PortalID = @portalId
            AND (@now IS NULL OR ((NE.StartDate IS NULL OR @now >= NE.StartDate) AND (NE.EndDate IS NULL OR @now < NE.EndDate)))
            AND ((NE.ThematicWeight >= @minThematicWeight AND NE.ThematicWeight <= @maxThematicWeight)
                OR (NE.StructuralWeight >= @minStructuralWeight AND NE.StructuralWeight <= @maxStructuralWeight))
            AND (CIT.TermID = @term1
            OR CIT.TermID = @term2
            OR CIT.TermID = @term3
            OR CIT.TermID = @term4
            OR CIT.TermID = @term5
            OR CIT.TermID = @term6
            OR CIT.TermID = @term7
            OR CIT.TermID = @term8
            OR CIT.TermID = @term9
            OR CIT.TermID = @term10
            OR CIT.TermID = @term11
            OR CIT.TermID = @term12
            OR CIT.TermID = @term13
            OR CIT.TermID = @term14
            OR CIT.TermID = @term15
            OR CIT.TermID = @term16
            OR CIT.TermID = @term17
            OR CIT.TermID = @term18
            OR CIT.TermID = @term19
            OR CIT.TermID = @term20)
END
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntriesByTerms_FirstPage]
    @portalId int,
    @pageSize int,
    @now datetime,
    @minThematicWeight int,
    @maxThematicWeight int,
    @minStructuralWeight int,
    @maxStructuralWeight int,
    @term1 int,
    @term2 int = NULL,
    @term3 int = NULL,
    @term4 int = NULL,
    @term5 int = NULL,
    @term6 int = NULL,
    @term7 int = NULL,
    @term8 int = NULL,
    @term9 int = NULL,
    @term10 int = NULL,
    @term11 int = NULL,
    @term12 int = NULL,
    @term13 int = NULL,
    @term14 int = NULL,
    @term15 int = NULL,
    @term16 int = NULL,
    @term17 int = NULL,
    @term18 int = NULL,
    @term19 int = NULL,
    @term20 int = NULL
AS
BEGIN
    SET NOCOUNT ON;

    SELECT DISTINCT TOP (@pageSize) NE2.* FROM
        (SELECT NE.*, 
            (CASE WHEN NE.StartDate IS NOT NULL THEN NE.StartDate ELSE CI.CreatedOnDate END) AS PublishedOnDate
        FROM {databaseOwner}[{objectQualifier}r7_News] AS NE
            INNER JOIN {databaseOwner}[{objectQualifier}ContentItems] AS CI
                ON NE.ContentItemID = CI.ContentItemID
            INNER JOIN {databaseOwner}[{objectQualifier}ContentItems_Tags] AS CIT 
                ON CI.ContentItemID = CIT.ContentItemID 
            WHERE NE.PortalID = @portalId
                AND (@now IS NULL OR ((NE.StartDate IS NULL OR @now >= NE.StartDate) AND (NE.EndDate IS NULL OR @now < NE.EndDate)))
                AND ((NE.ThematicWeight >= @minThematicWeight AND NE.ThematicWeight <= @maxThematicWeight)
                    OR (NE.StructuralWeight >= @minStructuralWeight AND NE.StructuralWeight <= @maxStructuralWeight))
                AND (CIT.TermID = @term1
                OR CIT.TermID = @term2
                OR CIT.TermID = @term3
                OR CIT.TermID = @term4
                OR CIT.TermID = @term5
                OR CIT.TermID = @term6
                OR CIT.TermID = @term7
                OR CIT.TermID = @term8
                OR CIT.TermID = @term9
                OR CIT.TermID = @term10
                OR CIT.TermID = @term11
                OR CIT.TermID = @term12
                OR CIT.TermID = @term13
                OR CIT.TermID = @term14
                OR CIT.TermID = @term15
                OR CIT.TermID = @term16
                OR CIT.TermID = @term17
                OR CIT.TermID = @term18
                OR CIT.TermID = @term19
                OR CIT.TermID = @term20)
        ) AS NE2
        ORDER BY NE2.PublishedOnDate DESC
END
GO