--
--  01.00.00.SqlDataProvider
--
--  Author:
--       Roman M. Yagodin <roman.yagodin@gmail.com>
--
--  Copyright (c) 2016 Roman M. Yagodin
--
--  This program is free software: you can redistribute it and/or modify
--  it under the terms of the GNU Affero General Public License as published by
--  the Free Software Foundation, either version 3 of the License, or
--  (at your option) any later version.
--
--  This program is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU Affero General Public License for more details.
--
--  You should have received a copy of the GNU Affero General Public License
--  along with this program.  If not, see <http://www.gnu.org/licenses/>.

-- NOTE: To manually execute this script you must 
-- replace {databaseOwner} and {objectQualifier} with real values. 
-- Defaults is "dbo." for database owner and "" for object qualifier 

-- Create tables

IF NOT EXISTS (select * from sys.objects where object_id = object_id (N'{databaseOwner}[{objectQualifier}r7_News]') and type in (N'U'))
BEGIN
    CREATE TABLE {databaseOwner}[{objectQualifier}r7_News]
    (
        EntryID int NOT NULL IDENTITY (1, 1),
        PortalID int NOT NULL,
        ContentItemID int NOT NULL,
        AgentModuleID int NULL,
        Title nvarchar (255) NOT NULL,
        Description nvarchar (max) NULL,
        Url nvarchar (255) NULL,
        StartDate datetime NULL,
        EndDate datetime NULL,
        ThresholdDate datetime NULL,
        DueDate datetime NULL,
        ThematicWeight int NOT NULL,
        StructuralWeight int NOT NULL
        CONSTRAINT [PK_{objectQualifier}r7_News] PRIMARY KEY CLUSTERED (EntryID)
        CONSTRAINT [FK_{objectQualifier}r7_News_Portals] FOREIGN KEY (PortalID)
            REFERENCES {databaseOwner}[{objectQualifier}Portals] (PortalID) ON DELETE CASCADE,
        CONSTRAINT [FK_{objectQualifier}r7_News_ContentItems] FOREIGN KEY (ContentItemID)
            REFERENCES {databaseOwner}[{objectQualifier}ContentItems] (ContentItemID) ON DELETE CASCADE,
        CONSTRAINT [FK_{objectQualifier}r7_News_AgentModules] FOREIGN KEY (AgentModuleID)
            REFERENCES {databaseOwner}[{objectQualifier}Modules] (ModuleID) ON DELETE SET NULL
    )

    CREATE NONCLUSTERED INDEX [IX_{objectQualifier}_r7_News_PortalID] 
        ON {databaseOwner}[{objectQualifier}r7_News] (PortalID)

    CREATE NONCLUSTERED INDEX [IX_{objectQualifier}_r7_News_ContentItemID] 
        ON {databaseOwner}[{objectQualifier}r7_News] (ContentItemID)
END
GO

-- Drop stored procedures

IF EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}r7_News_GetNewsEntries]') and type in (N'P'))
    DROP PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntries]
GO

IF EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}r7_News_GetNewsEntries_Count]') and type in (N'P'))
    DROP PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntries_Count]
GO

IF EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}r7_News_GetNewsEntries_FirstPage]') and type in (N'P'))
    DROP PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntries_FirstPage]
GO

IF EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}r7_News_GetNewsEntriesByTerms]') and type in (N'P'))
    DROP PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntriesByTerms]
GO

IF EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}r7_News_GetNewsEntriesByTerms_Count]') and type in (N'P'))
    DROP PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntriesByTerms_Count]
GO

IF EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}r7_News_GetNewsEntriesByTerms_FirstPage]') and type in (N'P'))
    DROP PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntriesByTerms_FirstPage]
GO

-- Create stored procedures

CREATE PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntries]
    @portalId int,
    @minThematicWeight int,
    @maxThematicWeight int,
    @minStructuralWeight int,
    @maxStructuralWeight int
AS
BEGIN
    SET NOCOUNT ON;

    SELECT DISTINCT NE.* FROM {databaseOwner}[{objectQualifier}r7_News] AS NE
        INNER JOIN {databaseOwner}[{objectQualifier}ContentItems] AS CI
            ON NE.ContentItemID = CI.ContentItemID
        WHERE NE.PortalID = @portalId
            AND ((NE.ThematicWeight >= @minThematicWeight AND NE.ThematicWeight <= @maxThematicWeight)
                OR (NE.StructuralWeight >= @minStructuralWeight AND NE.StructuralWeight <= @maxStructuralWeight))
END
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntries_Count]
    @portalId int,
    @checkNow bit,
    @now datetime,
    @minThematicWeight int,
    @maxThematicWeight int,
    @minStructuralWeight int,
    @maxStructuralWeight int
AS
BEGIN
    SET NOCOUNT ON;

    SELECT COUNT (*) FROM {databaseOwner}[{objectQualifier}r7_News] AS NE
        INNER JOIN {databaseOwner}[{objectQualifier}ContentItems] AS CI
            ON NE.ContentItemID = CI.ContentItemID
        WHERE NE.PortalID = @portalId
            AND (@checkNow = 0 OR ((NE.StartDate IS NULL OR @now >= NE.StartDate) AND (NE.EndDate IS NULL OR @now < NE.EndDate)))
            AND ((NE.ThematicWeight >= @minThematicWeight AND NE.ThematicWeight <= @maxThematicWeight)
                OR (NE.StructuralWeight >= @minStructuralWeight AND NE.StructuralWeight <= @maxStructuralWeight))
END
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntries_FirstPage]
    @portalId int,
    @pageSize int,
    @checkNow bit,
    @now datetime,
    @minThematicWeight int,
    @maxThematicWeight int,
    @minStructuralWeight int,
    @maxStructuralWeight int
AS
BEGIN
    SET NOCOUNT ON;

    SELECT TOP (@pageSize) NE.* FROM {databaseOwner}[{objectQualifier}r7_News] AS NE
        INNER JOIN {databaseOwner}[{objectQualifier}ContentItems] AS CI
            ON NE.ContentItemID = CI.ContentItemID
        WHERE NE.PortalID = @portalId
            -- Get only published items
            AND (@checkNow = 0 OR ((NE.StartDate IS NULL OR @now >= NE.StartDate) AND (NE.EndDate IS NULL OR @now < NE.EndDate)))
            -- Filter by weighs
            AND ((NE.ThematicWeight >= @minThematicWeight AND NE.ThematicWeight <= @maxThematicWeight)
                OR (NE.StructuralWeight >= @minStructuralWeight AND NE.StructuralWeight <= @maxStructuralWeight))
        -- Order by PublishedOnDate DESC 
        ORDER BY CASE WHEN NE.StartDate IS NOT NULL THEN NE.StartDate ELSE CI.CreatedOnDate END DESC
END
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntriesByTerms]
    @portalId int,
    @minThematicWeight int,
    @maxThematicWeight int,
    @minStructuralWeight int,
    @maxStructuralWeight int,
    @term1 int,
    @term2 int = NULL,
    @term3 int = NULL,
    @term4 int = NULL,
    @term5 int = NULL,
    @term6 int = NULL,
    @term7 int = NULL,
    @term8 int = NULL,
    @term9 int = NULL,
    @term10 int = NULL,
    @term11 int = NULL,
    @term12 int = NULL,
    @term13 int = NULL,
    @term14 int = NULL,
    @term15 int = NULL,
    @term16 int = NULL,
    @term17 int = NULL,
    @term18 int = NULL,
    @term19 int = NULL,
    @term20 int = NULL
AS
BEGIN
    SET NOCOUNT ON;

    SELECT DISTINCT NE.* FROM {databaseOwner}[{objectQualifier}r7_News] AS NE
        INNER JOIN {databaseOwner}[{objectQualifier}ContentItems] AS CI
            ON NE.ContentItemID = CI.ContentItemID
        INNER JOIN {databaseOwner}[{objectQualifier}ContentItems_Tags] AS CIT 
            ON CI.ContentItemID = CIT.ContentItemID 
        WHERE NE.PortalID = @portalId
            AND ((NE.ThematicWeight >= @minThematicWeight AND NE.ThematicWeight <= @maxThematicWeight)
                OR (NE.StructuralWeight >= @minStructuralWeight AND NE.StructuralWeight <= @maxStructuralWeight))
            AND (CIT.TermID = @term1
            OR CIT.TermID = @term2
            OR CIT.TermID = @term3
            OR CIT.TermID = @term4
            OR CIT.TermID = @term5
            OR CIT.TermID = @term6
            OR CIT.TermID = @term7
            OR CIT.TermID = @term8
            OR CIT.TermID = @term9
            OR CIT.TermID = @term10
            OR CIT.TermID = @term11
            OR CIT.TermID = @term12
            OR CIT.TermID = @term13
            OR CIT.TermID = @term14
            OR CIT.TermID = @term15
            OR CIT.TermID = @term16
            OR CIT.TermID = @term17
            OR CIT.TermID = @term18
            OR CIT.TermID = @term19
            OR CIT.TermID = @term20)
END
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntriesByTerms_Count]
    @portalId int,
    @checkNow bit,
    @now datetime,
    @minThematicWeight int,
    @maxThematicWeight int,
    @minStructuralWeight int,
    @maxStructuralWeight int,
    @term1 int,
    @term2 int = NULL,
    @term3 int = NULL,
    @term4 int = NULL,
    @term5 int = NULL,
    @term6 int = NULL,
    @term7 int = NULL,
    @term8 int = NULL,
    @term9 int = NULL,
    @term10 int = NULL,
    @term11 int = NULL,
    @term12 int = NULL,
    @term13 int = NULL,
    @term14 int = NULL,
    @term15 int = NULL,
    @term16 int = NULL,
    @term17 int = NULL,
    @term18 int = NULL,
    @term19 int = NULL,
    @term20 int = NULL
AS
BEGIN
    SET NOCOUNT ON;

    SELECT COUNT (DISTINCT NE.EntryID) FROM {databaseOwner}[{objectQualifier}r7_News] AS NE
        INNER JOIN {databaseOwner}[{objectQualifier}ContentItems] AS CI
            ON NE.ContentItemID = CI.ContentItemID
        INNER JOIN {databaseOwner}[{objectQualifier}ContentItems_Tags] AS CIT 
            ON CI.ContentItemID = CIT.ContentItemID 
        WHERE NE.PortalID = @portalId
            AND (@checkNow = 0 OR ((NE.StartDate IS NULL OR @now >= NE.StartDate) AND (NE.EndDate IS NULL OR @now < NE.EndDate)))
            AND ((NE.ThematicWeight >= @minThematicWeight AND NE.ThematicWeight <= @maxThematicWeight)
                OR (NE.StructuralWeight >= @minStructuralWeight AND NE.StructuralWeight <= @maxStructuralWeight))
            AND (CIT.TermID = @term1
            OR CIT.TermID = @term2
            OR CIT.TermID = @term3
            OR CIT.TermID = @term4
            OR CIT.TermID = @term5
            OR CIT.TermID = @term6
            OR CIT.TermID = @term7
            OR CIT.TermID = @term8
            OR CIT.TermID = @term9
            OR CIT.TermID = @term10
            OR CIT.TermID = @term11
            OR CIT.TermID = @term12
            OR CIT.TermID = @term13
            OR CIT.TermID = @term14
            OR CIT.TermID = @term15
            OR CIT.TermID = @term16
            OR CIT.TermID = @term17
            OR CIT.TermID = @term18
            OR CIT.TermID = @term19
            OR CIT.TermID = @term20)
END
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}r7_News_GetNewsEntriesByTerms_FirstPage]
    @portalId int,
    @pageSize int,
    @checkNow bit,
    @now datetime,
    @minThematicWeight int,
    @maxThematicWeight int,
    @minStructuralWeight int,
    @maxStructuralWeight int,
    @term1 int,
    @term2 int = NULL,
    @term3 int = NULL,
    @term4 int = NULL,
    @term5 int = NULL,
    @term6 int = NULL,
    @term7 int = NULL,
    @term8 int = NULL,
    @term9 int = NULL,
    @term10 int = NULL,
    @term11 int = NULL,
    @term12 int = NULL,
    @term13 int = NULL,
    @term14 int = NULL,
    @term15 int = NULL,
    @term16 int = NULL,
    @term17 int = NULL,
    @term18 int = NULL,
    @term19 int = NULL,
    @term20 int = NULL
AS
BEGIN
    SET NOCOUNT ON;

    SELECT DISTINCT TOP (@pageSize) NE2.* FROM
        (SELECT NE.*, 
            (CASE WHEN NE.StartDate IS NOT NULL THEN NE.StartDate ELSE CI.CreatedOnDate END) AS PublishedOnDate
        FROM {databaseOwner}[{objectQualifier}r7_News] AS NE
            INNER JOIN {databaseOwner}[{objectQualifier}ContentItems] AS CI
                ON NE.ContentItemID = CI.ContentItemID
            INNER JOIN {databaseOwner}[{objectQualifier}ContentItems_Tags] AS CIT 
                ON CI.ContentItemID = CIT.ContentItemID 
            WHERE NE.PortalID = @portalId
                AND (@checkNow = 0 OR ((NE.StartDate IS NULL OR @now >= NE.StartDate) AND (NE.EndDate IS NULL OR @now < NE.EndDate)))
                AND ((NE.ThematicWeight >= @minThematicWeight AND NE.ThematicWeight <= @maxThematicWeight)
                    OR (NE.StructuralWeight >= @minStructuralWeight AND NE.StructuralWeight <= @maxStructuralWeight))
                AND (CIT.TermID = @term1
                OR CIT.TermID = @term2
                OR CIT.TermID = @term3
                OR CIT.TermID = @term4
                OR CIT.TermID = @term5
                OR CIT.TermID = @term6
                OR CIT.TermID = @term7
                OR CIT.TermID = @term8
                OR CIT.TermID = @term9
                OR CIT.TermID = @term10
                OR CIT.TermID = @term11
                OR CIT.TermID = @term12
                OR CIT.TermID = @term13
                OR CIT.TermID = @term14
                OR CIT.TermID = @term15
                OR CIT.TermID = @term16
                OR CIT.TermID = @term17
                OR CIT.TermID = @term18
                OR CIT.TermID = @term19
                OR CIT.TermID = @term20)
        ) AS NE2
        ORDER BY NE2.PublishedOnDate DESC
END
GO
